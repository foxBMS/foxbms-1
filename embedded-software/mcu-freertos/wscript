#!/usr/bin/env python
# -*- coding: utf-8 -*-

# @copyright &copy; 2010 - 2021, Fraunhofer-Gesellschaft zur Foerderung der
#   angewandten Forschung e.V. All rights reserved.
#
# BSD 3-Clause License
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1.  Redistributions of source code must retain the above copyright notice,
#     this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
# 3.  Neither the name of the copyright holder nor the names of its
#     contributors may be used to endorse or promote products derived from this
#     software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# We kindly request you to use one or more of the following phrases to refer to
# foxBMS in your hardware, software, documentation or advertising materials:
#
# &Prime;This product uses parts of foxBMS&reg;&Prime;
#
# &Prime;This product includes parts of foxBMS&reg;&Prime;
#
# &Prime;This product is derived from foxBMS&reg;&Prime;

"""WAF script for building "foxbms-stmhal" library.
location of this wscript:
    /src/os/wscript

library output:
    /build/src/os/libfoxbms-os.a

"""

import os


def build(bld):
    srcs = ' '.join([
           os.path.join('Source', 'croutine.c'),
           os.path.join('Source', 'list.c'),
           os.path.join('Source', 'portable', 'GCC', 'ARM_CM4F', 'port.c'),
           os.path.join('Source', 'queue.c'),
           os.path.join('Source', 'tasks.c'),
           os.path.join('Source', 'timers.c'),

           os.path.join('..', bld.env.mcu_dir, 'src', 'os', 'os.c'),
           os.path.join('..', bld.env.mcu_dir, 'src', 'os', 'syscall.c')])

    includes = os.path.join(bld.bldnode.abspath()) + ' '
    includes += bld.env.hal_dirs + ' '
    includes += bld.env.FreeRTOS_dirs + ' '
    includes += ' '.join([
                bld.path.get_src().abspath(),

                os.path.join(bld.top_dir, bld.env.es_dir, bld.env.common_dir, 'src', 'driver', 'uart'),

                os.path.join(bld.top_dir, bld.env.es_dir, bld.env.common_dir, 'src', 'engine', 'database'),
                os.path.join(bld.top_dir, bld.env.es_dir, bld.env.common_dir, 'src', 'engine', 'diag'),

                os.path.join(bld.top_dir, bld.env.es_dir, bld.env.mcu_dir, 'src', 'application', 'config'),
                os.path.join(bld.top_dir, bld.env.es_dir, bld.env.mcu_dir, 'src', 'application', 'task'),

                os.path.join(bld.top_dir, bld.env.es_dir, bld.env.mcu_dir, 'src', 'driver', 'config'),

                os.path.join(bld.top_dir, bld.env.es_dir, bld.env.mcu_dir, 'src', 'engine', 'config'),
                os.path.join(bld.top_dir, bld.env.es_dir, bld.env.mcu_dir, 'src', 'engine', 'sys'),
                os.path.join(bld.top_dir, bld.env.es_dir, bld.env.mcu_dir, 'src', 'engine', 'task'),

                os.path.join(bld.top_dir, bld.env.es_dir, bld.env.mcu_dir, 'src', 'general'),
                os.path.join(bld.top_dir, bld.env.es_dir, bld.env.mcu_dir, 'src', 'general', 'config'),
                os.path.join(bld.top_dir, bld.env.es_dir, bld.env.mcu_dir, 'src', 'general', 'config', 'FreeRTOS'),
                os.path.join(bld.top_dir, bld.env.es_dir, bld.env.mcu_dir, 'src', 'general', 'config', bld.env.CPU_MAJOR),
                os.path.join(bld.top_dir, bld.env.es_dir, bld.env.mcu_dir, 'src', 'general', 'includes'),

                os.path.join(bld.top_dir, bld.env.es_dir, bld.env.mcu_dir, 'src', 'os')])

    includes += ' '

    if bld.variant == 'primary':
        includes += ' '.join([])
    elif bld.variant == 'secondary':
        includes += ' '.join([])

    bld.stlib(target='foxbms-os',
              source=srcs,
              includes=includes,
              cflags=bld.env.CFLAGS_freertos,
              features=['size', 'check_includes'])
